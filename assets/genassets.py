import os
import sys
import PIL
from PIL import Image

def png_to_bytes(path): # Convert a PNG file to bytes
	img = Image.open(path)
	img = img.convert('RGBA')
	img_dta = img.getdata()
	data = []

	data.append(img.width * img.height) # array size (excluding header)
	data.append(img.width) # width
	data.append(img.height) # height
	data.append(0) # Padding

	for pixel in img_dta:
		data.append((pixel[3] << 24) | (pixel[0] << 16) | (pixel[1] << 8) | pixel[2])
	return data

def bytes_to_c_array(data, name): # Convert the bytes to a C array (for the .c file)
	output = 'const unsigned int ' + name + '[] = {\n'
	for i in range(0, len(data)):
		output += hex(data[i]) + ', '
		if i % 16 == 15:
			output += '\n'
	output += '};\n'
	return output

def c_header_array(name, size): # Generate the header for the array (the actual array is in the .c file)
	return 'extern const unsigned int ' + name + '[];\n'

path = "./"

assets_c = ""
assets_h = ""

count = 0

def recursive_search(path):
	global count
	global assets_c
	global assets_h
	assets_c += '\n'
	assets_h += '\n'

	foldername = path.split('/')[-2]

	print('Searching ' + path)
	files = os.listdir(path)
	for file in files:
		if os.path.isdir(path + file):
			recursive_search(path + file + '/')
		else:
			if file.endswith('.png'):
				count += 1
				print('Converting ' + path + file)
				data = png_to_bytes(path + file)
				name = "tex_" + foldername + '_' + file.split('.')[0]
				assets_c += bytes_to_c_array(data, name)
				assets_h += c_header_array(name, len(data))

recursive_search(path)

print('Converted ' + str(count) + ' files')

assets_c_header = '#include "assets.h"\n\n'
assets_h_header = '#ifndef ASSETS_H\n#define ASSETS_H\n\n'
assets_c_footer = "// Automatically generated by genassets.py\n"
assets_h_footer = "#endif\n// Automatically generated by genassets.py\n"

with open('assets.c', 'w') as f:
	f.write(assets_c_header + assets_c + assets_c_footer)

with open('assets.h', 'w') as f:
	f.write(assets_h_header + assets_h + assets_h_footer)
